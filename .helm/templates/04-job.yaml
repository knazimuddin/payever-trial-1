{{ $chartName := .Chart.Name }}
{{ $values := .Values }}
{{ $appName := printf "%s-job" $chartName }}
apiVersion: batch/v1
kind: Job

metadata:
  name: {{ $appName}}
  namespace: {{ $values.namespace }}

  labels:
    app: {{ $appName}}
    tier: job
    layer: backend
    type: job

  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "werf.io/track": "true"

spec:
  ttlSecondsAfterFinished: 30

  template:
    metadata:
      labels:
        app: {{ $appName }}
        tier: job
        layer: backend
        type: job

    spec:
      restartPolicy: Never

      priorityClassName: app-8stars

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node_worker
                operator: In
                values:
                  - "true"

      imagePullSecrets:
        - name: {{ $values.image.pullSecretName }}

      containers:
        - name: node
          image: {{ $values.image.nodejs }}
          imagePullPolicy: IfNotPresent
          command: [ "/bin/bash", "-c", "/payever/deploy/job.sh" ]

          envFrom:
            - configMapRef:
                name: {{ $chartName }}

            - configMapRef:
                name: micro-url-map

            - secretRef:
                name: {{ $chartName }}

          env:
            - name: KUBERNETES_DEPLOYED
              value: "{{ now }}"
