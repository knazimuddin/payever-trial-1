apiVersion: extensions/v1beta1
kind: Deployment

metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}

  labels:
    app: {{ .Chart.Name }}
    tier: app
    layer: nodejs-backend

  annotations:
    {{ .Chart.Name }}/deploy-timestamp: {{ now }}

spec:
  replicas: {{ .Values.replicaCount }}

  strategy:
    type: RollingUpdate

    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  selector:
    matchLabels:
      app: {{ .Chart.Name }}

  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        tier: app
        layer: nodejs-backend

    spec:
      priorityClassName: app-9stars

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node_worker
                operator: In
                values:
                - "true"

      imagePullSecrets:
        - name: {{ .Values.image.pullSecretName }}

      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.nodejs }}
          imagePullPolicy: Always
          command: [ "/bin/sh", "-c", "/payever/deploy/deploy.sh" ]

          lifecycle:
            preStop:
              exec:
                command: ["sleep", "15"]

          ports:
            - containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
              name: http

          livenessProbe:
            httpGet:
              path: /api/status
              port: {{ .Values.service.statusPort }}
            initialDelaySeconds: 90
            periodSeconds: 5

          readinessProbe:
            httpGet:
              path: /api/status
              port: {{ .Values.service.statusPort }}
            initialDelaySeconds: 15
            periodSeconds: 5
            failureThreshold: 15

          resources:
{{ toYaml .Values.resources | indent 12 }}

          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}

            - configMapRef:
                name: micro-url-map

            - secretRef:
                name: {{ .Chart.Name }}

          env:
            - name: KUBERNETES_DEPLOYED
              value: "{{ now }}"
