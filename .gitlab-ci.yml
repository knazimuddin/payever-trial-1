stages:
  - test_build
  - test
  - build
  - deploy


Test build:
  image: "$BUILD_NODE_IMAGE"
  stage: test_build
  tags:
    - test
  artifacts:
    untracked: true
    paths:
      - node_modules/
    name: "$CI_COMMIT_REF_NAME"
    expire_in: 1h
  only:
    variables:
      - $IN_STAGE_TYPE == "test"
  before_script:
    - node -v
    - npm -v
  script:
    - npm install



.Test: &test
  image: "$TEST_NODE_IMAGE"
  stage: test
  tags:
    - test
  only:
    variables:
      - $IN_STAGE_TYPE == "test"
  before_script:
    - node -v
    - npm -v

Test security:
  <<: *test
  script:
    - npm audit


Test lint:
  <<: *test
  allow_failure: true
  script:
    - tslint -p ./tsconfig.json -c /config/tslint.json


Test license:
  <<: *test
  script:
    - license-checker --json > license.json
    - curl -o - -w "\n%{http_code}\n" -H "Content-Type:application/json" $INTEGRATOR_URL/api/license/check -d "@license.json"| tee >(tail -n 1 | cmp <(echo 2xx) - ) | tee >(grep "char 2"; echo $? > status-code) && grep 0 status-code




Build:
  stage: build
  tags:
    - build
  only:
    - branches
  variables:
    IMAGE_NAME: "$CI_PROJECT_PATH/$CI_COMMIT_REF_SLUG"
    IMAGE_TAG: "$CI_COMMIT_SHA"
  except:
    variables:
      - $IN_STAGE_TYPE == "test"
      - $IN_STAGE_TYPE == "deploy"
  before_script:
    - echo "$REGISTRY_SERVER/$IMAGE_NAME:$IMAGE_TAG"
    - dapp version
  script:
    - dapp bp
      --name $CI_PROJECT_PATH_SLUG
      --repo $REGISTRY_SERVER
      --registry-username $REGISTRY_LOGIN
      --registry-password $REGISTRY_PASSWORD
      --tag $IMAGE_TAG


Tagging image:
  stage: build
  tags:
    - production_deploy
  only:
    - tags
  variables:
    BRANCH_IMAGE: "$REGISTRY_SERVER/$CI_PROJECT_PATH/master:$CI_COMMIT_SHA"
    TAG_IMAGE: "$REGISTRY_SERVER/$CI_PROJECT_PATH:$CI_COMMIT_TAG"
  except:
    variables:
      - $IN_STAGE_TYPE == "deploy"
  before_script:
    - echo "$BRANCH_IMAGE"
    - echo "$TAG_IMAGE"
  script:
    - docker pull $BRANCH_IMAGE
    - docker tag $BRANCH_IMAGE $TAG_IMAGE
    - docker push $TAG_IMAGE



.Deploy: &deploy
  stage: deploy
  except:
    variables:
      - $IN_STAGE_TYPE == "test"
  before_script:
    - echo "$REGISTRY_SERVER/$IMAGE_NAME:$IMAGE_TAG"
    - dapp version
  script:
    - dapp deploy $CI_PROJECT_PATH_SLUG-$NAMESPACE
      --name $CI_PROJECT_PATH_SLUG
      --tag=$IMAGE_TAG
      --set "namespace=$NAMESPACE"
      --set "image.nodejs=$REGISTRY_SERVER/$IMAGE_NAME:$IMAGE_TAG"
      --set "image.pullSecretName=$REGISTRY_PULL_SECRET_NAME"
      --repo $REGISTRY_SERVER


Deploy to showroom:
  <<: *deploy
  when: manual
  tags:
    - showroom_deploy
  environment:
    name: showroom
  variables:
    IMAGE_NAME: "$CI_PROJECT_PATH/$CI_COMMIT_REF_SLUG"
    IMAGE_TAG: "$CI_COMMIT_SHA"
    NAMESPACE: developers
  only:
    - branches


Deploy to staging:
  <<: *deploy
  tags:
    - staging_deploy
  environment:
    name: staging
  variables:
    IMAGE_NAME: "$CI_PROJECT_PATH/$CI_COMMIT_REF_SLUG"
    IMAGE_TAG: "$CI_COMMIT_SHA"
    NAMESPACE: staging
  only:
    - master


Deploy to production:
  <<: *deploy
  tags:
    - production_deploy
  environment:
    name: production
  variables:
    IMAGE_NAME: "$CI_PROJECT_PATH"
    IMAGE_TAG: "$CI_COMMIT_TAG"
    NAMESPACE: production
  only:
    - tags
